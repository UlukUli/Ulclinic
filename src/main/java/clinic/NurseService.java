package clinic;

import java.sql.*;
import java.util.Scanner;

public class NurseService {

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
    public static void showProcedures() {
        System.out.println("\nüìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä:");
        String sql = "SELECT * FROM procedures";

        try (Connection conn = DatabaseManager.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            boolean found = false;
            while (rs.next()) {
                System.out.println("- " + rs.getString("description") + " | –ü–∞—Ü–∏–µ–Ω—Ç: " + rs.getString("patient_login"));
                found = true;
            }
            if (!found) {
                System.out.println("–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä: " + e.getMessage());
        }
    }

    // –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
    public static void findPatient() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞: ");
        String name = scanner.nextLine();

        String sql = "SELECT * FROM users WHERE role = 'patient' AND name LIKE ?";
        try (Connection conn = DatabaseManager.connect();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, "%" + name + "%");
            ResultSet rs = stmt.executeQuery();

            boolean found = false;
            while (rs.next()) {
                System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç: " + rs.getString("name") + " | –õ–æ–≥–∏–Ω: " + rs.getString("login"));
                found = true;
            }
            if (!found) {
                System.out.println("–ü–∞—Ü–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞: " + e.getMessage());
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—É—á–µ–Ω–∏—è
    public static void showTasks() {
        System.out.println("\nüìã –°–ø–∏—Å–æ–∫ –ø–æ—Ä—É—á–µ–Ω–∏–π:");
        String sql = "SELECT * FROM tasks WHERE status = 'pending'";

        try (Connection conn = DatabaseManager.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            boolean found = false;
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id") + " | " + rs.getString("description"));
                found = true;
            }
            if (!found) {
                System.out.println("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Ä—É—á–µ–Ω–∏–π: " + e.getMessage());
        }
    }

    // –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ—Ä—É—á–µ–Ω–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
    public static void completeTask() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ—Ä—É—á–µ–Ω–∏—è: ");

        int id;
        try {
            id = Integer.parseInt(scanner.nextLine());
        } catch (NumberFormatException e) {
            System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.");
            return;
        }

        String sql = "UPDATE tasks SET status = 'done', date_done = CURRENT_DATE WHERE id = ?";
        try (Connection conn = DatabaseManager.connect();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            int rows = stmt.executeUpdate();

            if (rows > 0) {
                System.out.println("‚úÖ –ü–æ—Ä—É—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.");
            } else {
                System.out.println("‚ö† –ü–æ—Ä—É—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ—Ä—É—á–µ–Ω–∏—è: " + e.getMessage());
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –ø–æ—Ä—É—á–µ–Ω–∏—è
    public static void showCompletedTasks() {
        System.out.println("\n‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –ø–æ—Ä—É—á–µ–Ω–∏—è:");
        String sql = "SELECT * FROM tasks WHERE status = 'done'";

        try (Connection conn = DatabaseManager.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            boolean found = false;
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id") + " | –í—ã–ø–æ–ª–Ω–µ–Ω–æ: " + rs.getString("date_done"));
                found = true;
            }
            if (!found) {
                System.out.println("–ù–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π.");
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π: " + e.getMessage());
        }
    }
}